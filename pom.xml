<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from AuthRepo -->
    </parent>
    <groupId>com.tommy</groupId>
    <artifactId>eurekaserver</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>EurekaServer</name>
    <description>Euraka discovery service for FUN4 Big Idea</description>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <build.number>000</build.number>
        <commit.hash>local-build</commit.hash>
        <build.user>local-build</build.user>
        <build.repo>local-build</build.repo>
        <circle.workflow>local-build</circle.workflow>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- Web dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Eureka Discovery Service dependency -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

        <!-- Testing dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Setting up cloud dependencies and version control -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Plugin required for Continuous integration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <skipTests>false</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                    <forkMode>once</forkMode>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>com.google.cloud.tools</groupId>-->
<!--                <artifactId>jib-maven-plugin</artifactId>-->
<!--                <version>0.9.7</version>-->
<!--                <configuration>-->
<!--                    <to>-->
<!--                        <image>registry.hub.docker.com/tommygoossens/chatapp-eureka:${version}-b${build.number}</image>-->
<!--                    </to>-->
<!--                    <container>-->
<!--                        <jvmFlags>-->
<!--                        <jvmFlag>-Dcircle_build_num=${build.number}</jvmFlag>-->
<!--                        <jvmFlag>-Dcircle_comit=${commit.hash}</jvmFlag>-->
<!--                        <jvmFlag>-Dcircle_user=${build.user}</jvmFlag>-->
<!--                        <jvmFlag>-Dcircle_repo=${build.repo}</jvmFlag>-->
<!--                        <jvmFlag>-Dcircle_workflow_guid=${circle.workflow}</jvmFlag>-->
<!--                        </jvmFlags>-->
<!--                        <ports>-->
<!--                            <port>22500</port>-->
<!--                        </ports>-->
<!--                    </container>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>
